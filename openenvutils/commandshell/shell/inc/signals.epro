/* Generated automatically */
#ifndef have_Src_signals_globals
#define have_Src_signals_globals

extern mod_import_variable int sigtrapped[VSIGCOUNT];
extern mod_import_variable Eprog sigfuncs[VSIGCOUNT];
extern mod_import_variable int nsigtrapped;
extern mod_import_variable int queueing_enabled;
extern mod_import_variable int queue_front;
extern mod_import_variable int queue_rear;
extern mod_import_variable int signal_queue[MAX_QUEUE_SIZE];
extern mod_import_variable sigset_t signal_mask_queue[MAX_QUEUE_SIZE];
extern mod_import_variable int trap_queueing_enabled;
extern mod_import_variable int trap_queue_front;
extern mod_import_variable int trap_queue_rear;
extern mod_import_variable int trap_queue[MAX_QUEUE_SIZE];
extern mod_import_function void install_handler _((int sig));
extern mod_import_function void intr _((void));
extern mod_import_function void holdintr _((void));
extern mod_import_function void noholdintr _((void));
extern sigset_t signal_mask _((int sig));
#ifdef POSIX_SIGNALS
extern mod_import_variable sigset_t dummy_sigset1;
extern mod_import_variable sigset_t dummy_sigset2;
#else
#ifndef BSD_SIGNALS
#endif /* BSD_SIGNALS */
#endif /* POSIX_SIGNALS */
extern mod_import_function sigset_t signal_setmask _((sigset_t set));
extern int signal_suspend _((int sig,int sig2));
extern mod_import_function RETSIGTYPE zhandler _((int sig));
extern void killrunjobs _((int from_signal));
extern int killjb _((Job jn,int sig));
extern mod_import_function int settrap _((int sig,Eprog l));
extern void unsettrap _((int sig));
extern HashNode removetrap _((int sig));
extern void starttrapscope _((void));
extern void endtrapscope _((void));
extern int intrap;
extern int trapisfunc;
extern void dotrapargs _((int sig,int*sigtr,void*sigfn));
extern void dotrap _((int sig));

#endif /* !have_Src_signals_globals */
