/* Generated automatically */
#ifndef have_Src_init_globals
#define have_Src_init_globals

extern int noexitct;
extern char*underscore;
extern int underscorelen;
extern int underscoreused;
extern int sourcelevel;
extern mod_import_variable int SHTTY;
extern mod_import_variable FILE*shout;
extern mod_import_variable char*tcstr[TC_COUNT];
extern mod_import_variable int tclen[TC_COUNT];
extern int tclines;
extern int tccolumns;
extern mod_import_variable int hasam;
extern mod_import_variable int(*getkeyptr)_((int));
extern mod_import_variable sigset_t sigchld_mask;
extern mod_import_variable struct hookdef zshhooks[];
extern void loop _((int toplevel,int justonce));
extern void parseargs _((char**argv));
extern mod_import_function void init_io _((void));
extern mod_import_function void init_shout _((void));
extern mod_import_function int init_term _((void));
extern void setupvals _((void));
extern void init_signals _((void));
extern void run_init_scripts _((void));
extern void init_misc _((void));
extern int source _((char*s));
extern void sourcehome _((char*s));
extern void init_bltinmods _((void));
extern mod_import_function void noop_function _((void));
extern mod_import_function void noop_function_int _((UNUSED(int nothing)));
extern mod_import_variable ZleVoidFn trashzleptr;
extern mod_import_variable ZleVoidFn zle_resetpromptptr;
extern mod_import_variable ZleVoidFn refreshptr;
extern mod_import_variable ZleVoidIntFn spaceinlineptr;
extern mod_import_variable ZleReadFn zlereadptr;
extern mod_import_variable ZleVoidIntFn zlesetkeymapptr;
extern unsigned char*autoload_zleread _((char**lp,char**rp,int ha,int con));
extern mod_import_function unsigned char*fallback_zleread _((char**lp,UNUSED(char**rp),UNUSED(int ha),UNUSED(int con)));
extern mod_import_variable CompctlReadFn compctlreadptr;
extern mod_import_function int fallback_compctlread _((char*name,UNUSED(char**args),UNUSED(Options ops),UNUSED(char*reply)));
extern mod_import_function int zsh_main _((int argc,char**argv, char**env));

#endif /* !have_Src_init_globals */
